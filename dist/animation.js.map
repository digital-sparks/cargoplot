{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/animation.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// import { gsap } from 'gsap';\n// import { ScrollTrigger } from 'gsap/ScrollTrigger';\n// import { SplitText } from 'gsap/SplitText';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  //   gsap.registerPlugin(SplitText);\n  //   gsap.registerPlugin(ScrollTrigger);\n\n  // Platform component animation - only on desktop\n  gsap.matchMedia().add('(min-width: 911px)', () => {\n    const platformComponent = document.querySelector('.platform_component');\n\n    if (platformComponent) {\n      // ========== CONFIGURATION VARIABLES ==========\n      const CONFIG = {\n        // Timing\n        ITEM_DURATION: 8000, // How long each item stays active (ms)\n        DROPDOWN_DURATION: 0.3, // Dropdown open/close animation duration (s)\n        IMAGE_FADE_DURATION: 0.4, // Image cross-fade duration (s)\n        PROGRESS_EASE: 'none', // Progress line easing\n        ANIMATION_EASE: 'power2.inOut', // General animation easing\n\n        // User interaction\n        CLICK_RESUME_DELAY: 1000, // Delay before resuming after click (ms)\n        HOVER_RESUME_DELAY: 100, // Delay before resuming after hover (ms)\n\n        // ScrollTrigger\n        SCROLL_START: 'top 80%', // When animation starts on scroll\n      };\n\n      // ========== ELEMENT REFERENCES ==========\n      const items = Array.from(\n        platformComponent.querySelectorAll('[data-element=\"platform-item\"]')\n      );\n      const progressLines = Array.from(\n        platformComponent.querySelectorAll('[data-element=\"platform-progress-line\"]')\n      );\n      const dropdowns = Array.from(\n        platformComponent.querySelectorAll('[data-element=\"platform-dropdown\"]')\n      );\n      const images = Array.from(\n        platformComponent\n          .querySelector('.platform_col-images')\n          .querySelectorAll('[data-element=\"platform-image\"]')\n      );\n\n      // ========== STATE MANAGEMENT ==========\n      let state = {\n        currentIndex: 0,\n        isAutoPlaying: false,\n        isUserInteracting: false,\n        isAnimating: false,\n        pausedTime: 0,\n        startTime: null,\n      };\n\n      let timers = {\n        autoPlay: null,\n        progress: null,\n        resume: null,\n      };\n\n      // ========== UTILITY FUNCTIONS ==========\n      const clearAllTimers = () => {\n        Object.values(timers).forEach((timer) => {\n          if (timer) clearTimeout(timer);\n        });\n        if (timers.progress) timers.progress.kill();\n      };\n\n      const resetProgressLines = () => gsap.set(progressLines, { scaleY: 0 });\n\n      const updatePausedTime = () => {\n        if (state.startTime && state.isAutoPlaying) {\n          state.pausedTime += Date.now() - state.startTime;\n          state.pausedTime = Math.min(state.pausedTime, CONFIG.ITEM_DURATION);\n        }\n      };\n\n      // ========== CORE FUNCTIONS ==========\n\n      // Initial setup\n      const initializeElements = () => {\n        gsap.set(progressLines, { scaleY: 0, transformOrigin: 'top center', height: '100%' });\n        gsap.set(dropdowns.slice(1), { height: 0, opacity: 0, overflow: 'hidden' });\n        gsap.set(images.slice(1), { opacity: 0 });\n        gsap.set([images[0], dropdowns[0]], { opacity: 1 });\n        gsap.set(dropdowns[0], { height: 'auto' });\n      };\n\n      // Switch to specific item\n      const switchToItem = (index, resetTimer = true) => {\n        if (index === state.currentIndex || state.isAnimating) return;\n\n        state.isAnimating = true;\n        const previousIndex = state.currentIndex;\n        state.currentIndex = index;\n\n        resetProgressLines();\n        if (resetTimer) state.pausedTime = 0;\n\n        const tl = gsap.timeline({\n          onComplete: () => {\n            state.isAnimating = false;\n          },\n        });\n\n        tl.to(dropdowns, {\n          height: 0,\n          opacity: 0,\n          duration: CONFIG.DROPDOWN_DURATION,\n          ease: CONFIG.ANIMATION_EASE,\n        })\n          .to(\n            images[previousIndex],\n            {\n              opacity: 0,\n              duration: CONFIG.IMAGE_FADE_DURATION,\n              ease: CONFIG.ANIMATION_EASE,\n            },\n            '-=0.2'\n          )\n          .to(\n            images[index],\n            {\n              opacity: 1,\n              duration: CONFIG.IMAGE_FADE_DURATION,\n              ease: CONFIG.ANIMATION_EASE,\n            },\n            '-=0.4'\n          )\n          .to(\n            dropdowns[index],\n            {\n              height: 'auto',\n              opacity: 1,\n              duration: CONFIG.DROPDOWN_DURATION + 0.2,\n              ease: 'power2.out',\n            },\n            '-=0.2'\n          );\n      };\n\n      // Auto-play management\n      const startAutoPlay = () => {\n        if (!state.isAutoPlaying || state.isUserInteracting) return;\n\n        clearAllTimers();\n\n        const remainingTime = CONFIG.ITEM_DURATION - state.pausedTime;\n\n        if (remainingTime <= 0) {\n          const nextIndex = (state.currentIndex + 1) % items.length;\n          state.pausedTime = 0;\n          switchToItem(nextIndex, true);\n          startAutoPlay();\n          return;\n        }\n\n        state.startTime = Date.now();\n\n        timers.progress = gsap.to(progressLines[state.currentIndex], {\n          scaleY: 1,\n          duration: remainingTime / 1000,\n          ease: CONFIG.PROGRESS_EASE,\n        });\n\n        timers.autoPlay = setTimeout(() => {\n          if (state.isAutoPlaying && !state.isUserInteracting) {\n            const nextIndex = (state.currentIndex + 1) % items.length;\n            state.pausedTime = 0;\n            switchToItem(nextIndex, true);\n            startAutoPlay();\n          }\n        }, remainingTime);\n      };\n\n      const pauseAutoPlay = () => {\n        clearAllTimers();\n        updatePausedTime();\n        if (timers.progress) timers.progress.pause();\n      };\n\n      const scheduleResume = (delay = CONFIG.HOVER_RESUME_DELAY) => {\n        if (timers.resume) clearTimeout(timers.resume);\n\n        timers.resume = setTimeout(() => {\n          if (!state.isUserInteracting) {\n            state.isAutoPlaying = true;\n            startAutoPlay();\n          }\n        }, delay);\n      };\n\n      // ========== EVENT HANDLERS ==========\n      const handleClick = (index) => (e) => {\n        e.preventDefault();\n        if (state.isAnimating || index === state.currentIndex) return;\n\n        state.isUserInteracting = true;\n        state.isAutoPlaying = false;\n        pauseAutoPlay();\n\n        switchToItem(index, true);\n\n        setTimeout(() => {\n          if (!document.querySelector('[data-element=\"platform-item\"]:hover')) {\n            state.isUserInteracting = false;\n            state.isAutoPlaying = true;\n            startAutoPlay();\n          }\n        }, CONFIG.CLICK_RESUME_DELAY);\n      };\n\n      const handleMouseEnter = () => {\n        if (timers.resume) clearTimeout(timers.resume);\n        state.isUserInteracting = true;\n        pauseAutoPlay();\n      };\n\n      const handleMouseLeave = () => {\n        state.isUserInteracting = false;\n        if (!state.isAutoPlaying) scheduleResume();\n      };\n\n      // ========== INITIALIZATION ==========\n      initializeElements();\n\n      // Add event listeners\n      items.forEach((item, index) => {\n        item.addEventListener('click', handleClick(index));\n        item.addEventListener('mouseenter', handleMouseEnter);\n        item.addEventListener('mouseleave', handleMouseLeave);\n        item.style.cursor = 'pointer';\n      });\n\n      // ScrollTrigger\n      ScrollTrigger.create({\n        trigger: platformComponent,\n        start: CONFIG.SCROLL_START,\n        onEnter: () => {\n          state.isAutoPlaying = true;\n          state.isUserInteracting = false;\n          state.pausedTime = 0;\n          startAutoPlay();\n        },\n        onLeave: () => {\n          state.isAutoPlaying = false;\n          pauseAutoPlay();\n        },\n        onEnterBack: () => {\n          if (!state.isUserInteracting) {\n            state.isAutoPlaying = true;\n            startAutoPlay();\n          }\n        },\n        onLeaveBack: () => {\n          state.isAutoPlaying = false;\n          pauseAutoPlay();\n        },\n      });\n    }\n  });\n\n  // ... rest of code ...\n\n  const targets = document.querySelectorAll('[data-element=counter]');\n\n  targets.forEach((target) => {\n    const originalText = target.textContent.trim();\n    const counter = { value: 0 };\n\n    // Parse the target value and format info\n    const parseValue = (text) => {\n      // Extract prefix (any non-digit, non-decimal characters at start)\n      const prefixMatch = text.match(/^[^\\d.-]*/);\n      const prefix = prefixMatch ? prefixMatch[0] : '';\n\n      // Remove prefix to work with the rest\n      let remaining = text.slice(prefix.length);\n\n      // Handle K, M multipliers (check before extracting suffix)\n      let multiplier = 1;\n      let unit = '';\n      if (remaining.endsWith('K') || remaining.endsWith('k')) {\n        multiplier = 1000;\n        unit = remaining.slice(-1);\n        remaining = remaining.slice(0, -1);\n      } else if (remaining.endsWith('M') || remaining.endsWith('m')) {\n        multiplier = 1000000;\n        unit = remaining.slice(-1);\n        remaining = remaining.slice(0, -1);\n      }\n\n      // Extract suffix (any non-digit, non-decimal characters at end)\n      const suffixMatch = remaining.match(/[^\\d.-]*$/);\n      const suffix = suffixMatch ? suffixMatch[0] : '';\n\n      // Get the numeric part\n      const numericPart = remaining.slice(0, remaining.length - suffix.length);\n      const numValue = parseFloat(numericPart) * multiplier;\n\n      return {\n        value: numValue,\n        prefix,\n        suffix,\n        unit,\n        multiplier,\n        hasDecimal: numericPart.includes('.'),\n      };\n    };\n\n    const formatValue = (value, format) => {\n      let displayValue = value;\n\n      // Convert back to unit format\n      if (format.unit) {\n        displayValue = value / format.multiplier;\n        // Keep decimal if original had one\n        if (format.hasDecimal) {\n          displayValue = displayValue.toFixed(1);\n        } else {\n          displayValue = Math.round(displayValue);\n        }\n        displayValue += format.unit;\n      } else {\n        displayValue = Math.round(value);\n      }\n\n      return format.prefix + displayValue + format.suffix;\n    };\n\n    const parsed = parseValue(originalText);\n\n    // Set initial state to 0\n    target.textContent = formatValue(0, parsed);\n\n    gsap.to(counter, {\n      value: parsed.value,\n      duration: 2,\n      ease: 'power2.out',\n      snap: { value: 1 },\n      onUpdate: function () {\n        target.textContent = formatValue(counter.value, parsed);\n      },\n      scrollTrigger: {\n        trigger: target,\n        start: 'top 80%', // Animation starts when element is 80% into viewport\n        end: 'bottom 20%',\n        toggleActions: 'play none none reverse', // Play on enter, reverse on leave\n        once: true, // Only animate once\n        // markers: true, // Remove in production\n      },\n    });\n  });\n\n  // ... rest of code ...\n});\n"],
  "mappings": "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",
  "names": []
}
